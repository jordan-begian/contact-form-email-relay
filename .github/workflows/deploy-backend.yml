name: Build, Containerize, and Deploy Express API

permissions:
  contents: read
  id-token: write

on:
  push:
    branches:
      - main
    paths:
      - 'src/backend/**'
      - 'src/shared/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      CLOUD_RUN_SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
      GCP_GH_ACTIONS_SA_KEY: ${{ secrets.GCP_GH_ACTIONS_SA_KEY }}
      CORS_ORIGINS_B64: ${{ secrets.CORS_ORIGINS_B64 }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Decrypt CORS origins config
        run: |
          mkdir -p config
          echo "${{ env.CORS_ORIGINS_B64 }}" | base64 --decode > config/cors-origins.json

      - name: Install dependencies and build backend
        working-directory: .
        run: |
          npm ci; \
          npm run build:api; \
          rm -rf node_modules; \
          npm ci --omit=dev;

      - name: Authenticate with GCP
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ env.GCP_GH_ACTIONS_SA_KEY }}

      - name: Setup Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker for Google Artifact Registry
        run: |
          gcloud auth configure-docker --quiet

      - name: Build & Tag Docker image with Docker Compose
        run: |
          docker compose -p ${{ env.CLOUD_RUN_SERVICE }} build --no-cache; \
          docker tag ${{ env.CLOUD_RUN_SERVICE }} gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.CLOUD_RUN_SERVICE }}:${{ env.IMAGE_TAG }};

      - name: Push Docker image to Google Artifact Registry
        run: |
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.CLOUD_RUN_SERVICE }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.CLOUD_RUN_SERVICE }}
          image: gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.CLOUD_RUN_SERVICE }}:${{ env.IMAGE_TAG }}
          region: ${{ env.GCP_REGION }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          flags: '--allow-unauthenticated'
